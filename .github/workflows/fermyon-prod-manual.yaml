name: Fermyon Deploy (now)

on:
  push:
    branches: [main]
  workflow_dispatch: {}

concurrency:
  group: deploy-main
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-wasip1

      - name: Enable sccache
        uses: mozilla-actions/sccache-action@v0.0.6
      - name: Export sccache env
        run: |
          echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
          echo "SCCACHE_CACHE_SIZE=3G" >> $GITHUB_ENV

      - name: Cache Cargo registry + git
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-registry-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache target dir (incl. wasm)
        uses: actions/cache@v4
        with:
          path: target
          key: cargo-target-${{ runner.os }}-wasip1-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo-installed bins
        id: cache-cargo-bins
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin
          key: cargo-bins-${{ runner.os }}-v1

      - name: Cache sccache store
        uses: actions/cache@v4
        with:
          path: ~/.cache/sccache
          key: sccache-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Install cargo-leptos
        if: steps.cache-cargo-bins.outputs.cache-hit != 'true'
        run: cargo install --locked cargo-leptos@0.1.18

      - name: Install wasm-bindgen CLI (pinned)
        if: steps.cache-cargo-bins.outputs.cache-hit != 'true'
        run: cargo install --locked wasm-bindgen-cli --version 0.2.100

      - name: Install Spin
        uses: fermyon/actions/spin/setup@v2
        with:
          version: v3

      - name: Build Spin app (release)
        run: spin build --release

      - name: Deploy to Fermyon Cloud
        uses: fermyon/actions/spin/deploy@v2
        with:
          fermyon_token: ${{ secrets.FERMYON_CLOUD_TOKEN }}
